CMAKE_MINIMUM_REQUIRED(VERSION 2.8.11)
PROJECT(TowerDefense)

enable_testing()
add_definitions(-DTDPath=${CMAKE_SOURCE_DIR})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ggdb -std=c++14 -Wall -Wextra")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "/usr/share/OGRE/cmake/modules")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "/usr/local/lib/OGRE/cmake")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")
MESSAGE("CMAKE_MODULE_PATH: ${CMAKE_MODULE_PATH}")

ADD_DEFINITIONS(-DRTSHADER_SYSTEM_BUILD_CORE_SHADERS)
ADD_DEFINITIONS(-DRTSHADER_SYSTEM_BUILD_EXT_SHADERS)

#Ogre
find_package(OGRE REQUIRED)
message(STATUS "Found OGRE Libs: ${OGRE_LIBRARIES}")
INCLUDE_DIRECTORIES(${OGRE_INCLUDE_DIRS})
FIND_PACKAGE(OIS REQUIRED)
INCLUDE_DIRECTORIES(${OIS_INCLUDE_DIRS})
FIND_PACKAGE(CEGUI REQUIRED)
INCLUDE_DIRECTORIES(${CEGUI_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CEGUIOGRE_INCLUDE_DIRS})
set(CEGUIOGRE "/usr/local/lib/libCEGUIOgreRenderer-0.so")
set(OGREVIEW_LIBS ${OGRE_LIBRARIES} ${OGRE_Overlay_LIBRARIES} ${OIS_LIBRARIES} ${CEGUI_LIBRARIES} ${CEGUIOGRE})

MESSAGE(STATUS "OGREVIEW LIBS -- ${OGREVIEW_LIBS}")

#OpenCL 
find_package(OpenCL REQUIRED)
include_directories(${OPENCL_INCLUDE_DIRS})
if(OPENCL_HAS_CPP_BINDINGS)
    message("OpenCL has CPP bindings. Full include is: " ${OPENCL_INCLUDE_DIRS})
else(OPENCL_HAS_CPP_BINDINGS )
    message("No OpenCL CPP bindings found")
endif(OPENCL_HAS_CPP_BINDINGS)

#OpenCV
FIND_PACKAGE(OpenCV COMPONENTS core highgui imgproc REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
message("OpenCV include: " ${OpenCV_INCLUDE_DIRS})
message("OpenCV link: " ${OpenCV_LIBS})

#Boost
FIND_PACKAGE(Boost REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})
message("Boost include: " ${Boost_INCLUDE_DIRS})
message("Boost link: " ${Boost_LIBS})

#set(OGRE_BOOST_COMPONENTS thread date_time)
#find_package(Boost COMPONENTS ${OGRE_BOOST_COMPONENTS} REQUIRED)

set(YAML-CPP yaml-cpp)
find_package(yaml-cpp REQUIRED)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/Controller)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/Views)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/Model)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/Common)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/Common/include)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY})

ADD_SUBDIRECTORY(Common)
ADD_SUBDIRECTORY(Controller)
ADD_SUBDIRECTORY(Model)
ADD_SUBDIRECTORY(Views)

ADD_SUBDIRECTORY(Testing)
